% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter_features.r
\name{filter.features}
\alias{filter.features}
\title{Perform unsupervised feature filtering.}
\usage{
filter.features(siamcat, filter.method = "abundance",
    cutoff = 0.001, recomp.prop = FALSE, rm.unmapped = TRUE, verbose = 1)
}
\arguments{
\item{siamcat}{an object of class \link{siamcat-class}}

\item{filter.method}{method used for filtering the features, can be one of
these: \code{c('abundance', 'cum.abundance', 'prevalence')},
defaults to \code{'abundance'}}

\item{cutoff}{float, abundace or prevalence cutoff, default to \code{0.001}}

\item{recomp.prop}{boolean, should relative abundances be recomputed?,
defaults to \code{FALSE}}

\item{rm.unmapped}{boolean, should unmapped reads be discarded?, defaults to
\code{TRUE}}

\item{verbose}{control output: \code{0} for no output at all, \code{1}
for only information about progress and success, \code{2} for normal
level of information and \code{3} for full debug information,
defaults to \code{1}}
}
\value{
siamcat an object of class \link{siamcat-class}
}
\description{
This function performs unsupervised feature filtering. Features
    can be filtered based on abundance or prevalence. Additionally,
    unmapped reads may be removed.
}
\details{
This function filters the features in a \link{siamcat-class}
    object in a unsupervised manner.

    The different filter methods work in the following way: \itemize{
    \item \code{'abundace'} remove features whose abundance is never
    above the threshold value in any of the samples
    \item \code{'cum.abundance'} remove features with very low abundance
    in all samples i.e. ones that are never among the most abundant
    entities that collectively make up (1-cutoff) of the reads in
    any sample
    \item \code{'prevalence'} remove features with low prevalence across
    samples i.e. ones that are 0 (undetected) in more than (1-cutoff)
    proportion of samples.
    }
}
\examples{
    # Example dataset
    data(siamcat_example)
    # since the whole pipeline has been run in the example data, the feature
    # were filtered already.
    siamcat_example <- reset.features(siamcat_example)

# Simple examples
siamcat_filtered <- filter.features(siamcat_example,
    filter.method='abundance',
    cutoff=1e-03)

}
\keyword{SIAMCAT}
\keyword{filter.features}
